<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zhanweikai.com.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="zhanweikai.com.pojo.Employee">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="image" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, phone, type, role, image
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>



<!--查询该用户中所能访问到的url-->
  <select id="findRoleByEmployee" parameterType="java.lang.Long" resultType="java.lang.String">

    select url
    from role_permission rp , permission p
    where rp.permission_id = p.id
    and role_id in ( select role_id from employee_role where employee_id =  #{id,jdbcType=BIGINT} )



  </select>





  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="zhanweikai.com.pojo.Employee">
    insert into employee (id, username, password, 
      phone, type, role, 
      image)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zhanweikai.com.pojo.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="image != null">
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zhanweikai.com.pojo.Employee">
    update employee
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="zhanweikai.com.pojo.Employee">
    update employee
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
















  <select id="selectEmployeeByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee
    where username = #{username}
  </select>

  <select id="selectByEmployeeQuery" parameterType="zhanweikai.com.vo.EmployeeQuery" resultType="zhanweikai.com.vo.EmployeeDTO">
    select
    id,username, phone, type
    from employee
    <where>
      <choose>
        <when test="id != null and id != ''">
          id = #{id}
        </when>
        <when test="username != null and username != ''">
          <bind name="pattern" value="'%' + username + '%'"/>
          username like #{pattern}
        </when>
      </choose>
      <if test="type != null and type != ''">
        and type = #{type}
      </if>
      <if test="role != null and role != ''">
        and role = #{role}
      </if>
    </where>
  </select>

  <select id="countByEmployeeQuery" parameterType="zhanweikai.com.vo.EmployeeQuery" resultType="java.lang.Long">
    select
    count(*)
    from employee
    <where>
      <choose>
        <when test="id != null and id != ''">
          id = #{id}
        </when>
        <when test="username != null and username != ''">
          <bind name="pattern" value="'%' + username + '%'"/>
          username like #{pattern}
        </when>
      </choose>
      <if test="type != null and type != ''">
        and type = #{type}
      </if>
      <if test="role != null and role != ''">
        and role = #{role}
      </if>
    </where>
  </select>

  <select id="countByNameAndPassword" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    count(*)
    from employee
    where username = #{username} and password = #{password}
  </select>

  <select id="getByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from employee
    where id = #{id,jdbcType=BIGINT}
  </select>

  <insert id="insertEmployeeInfo" parameterType="zhanweikai.com.vo.EmployeeInfo">
    insert into employee (id, username, password,
      phone, type, role,
      image)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},
      #{image,jdbcType=VARCHAR})
  </insert>

</mapper>